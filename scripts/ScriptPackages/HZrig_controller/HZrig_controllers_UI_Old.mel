/*******************************************************************************************************
********************************************************************************************************
********************************************************************************************************
file -> HZrig_controllers_UI.mel
global procedures -> 

	
++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++
author: John HuangZhen
date: 20120322

contact me:
	qeejihz@gmail.com
	www.ani-Q.com
	
All Rights Reserved
********************************************************************************************************
********************************************************************************************************
*******************************************************************************************************/



proc HZrig_AttrLinkUPDW(string $attr,string $obj[])
{
	int $step = 1;
	for($i = 1;$i<size($obj);$i++)
	{
		if(!`attributeQuery -n $obj[$i] -ex $attr`)
		{
			$step++;
		}
		else
		{
			connectAttr -f ($obj[($i-$step)]+"."+$attr) ($obj[$i]+"."+$attr);
		}
	}

}





proc string[] HZrig_getFolderNameUnderLocPath(string $locPath,string $type)
{

	string $bP = `internalVar -usd`;
	string $bbP = $bP+$locPath;
	string $allR[];
	clear $allR;

	switch($type)
	{
		case "f":
			string $tempAll[] = `getFileList -folder $bbP -fs "*."`;
			for($tmp in $tempAll)
			{
				if(`filetest -d ($bbP+$tmp)`)
				{
					$allR[size($allR)] = $tmp;
				}
			}
			//$allR = `getFileList -folder $bbP -fs "*."`;
		break;
	
		case "mel":
			$allR = `getFileList -folder $bbP -fs "*.mel"`;
		break;
	
		case "info":
			$allR = `getFileList -folder $bbP -fs "*.info"`;
		break;
	
		case "data":
			$allR = `getFileList -folder $bbP -fs "*.data"`;
		break;


		case "proxy":
			$allR = `getFileList -folder $bbP -fs "*.proxy"`;
		break;
	
		case "txt":
			$allR = `getFileList -folder $bbP -fs "*.txt"`;
		break;
	
		case "ma":
			$allR = `getFileList -folder $bbP -fs "*.ma"`;
		break;
	
		case "mb":
			$allR = `getFileList -folder $bbP -fs "*.mb"`;
		break;

	
		case "bmp":
			$allR = `getFileList -folder $bbP -fs "*.bmp"`;
		break;

	
		case "jpg":
			$allR = `getFileList -folder $bbP -fs "*.jpg"`;
		break;

	
		case "iff":
			$allR = `getFileList -folder $bbP -fs "*.iff"`;
		break;

	
		case "tif":
			$allR = `getFileList -folder $bbP -fs "*.tif"`;
		break;

	
		case "tga":
			$allR = `getFileList -folder $bbP -fs "*.tga"`;
		break;

	
		case "anim":
			$allR = `getFileList -folder $bbP -fs "*.anin"`;
		break;

		
		case "cs":
			$allR = `getFileList -folder $bbP -fs "*.cs"`;
		break;
	}


	return $allR;

}




proc string[] HZrig_mayaInfo()
{
	string $return[2];
	string $os = "";
	if(`about -nt`)
	{
		$os = "win";
	}
	else if(`about -li` || `about -l64`)
	{
		$os = "linux";
	}
	else if(`about -mac`)
	{
		$os = "mac";
	}
	else
	{
		$os = "unKnow";
	}
	string $versionStr = `about -v`;
	string $versionStrs[] = stringToStringArray($versionStr," ");


	string $plugin_folderName = "";

	if($versionStrs[size($versionStrs)-1] == "x64")
	{
		$plugin_folderName = $os+"_"+$versionStrs[0]+"_x64";
	}
	else
	{
		$plugin_folderName = $os+"_"+$versionStrs[0]+"_x32";

	}
	/////////////////////////////////////////////////////
	string $outCurTime = "";
	string $tmp;
	for($tmp in stringToStringArray(`about -cd`,"/"))
	{
		$outCurTime+=$tmp;
	}
	for($tmp in stringToStringArray(`about -ct`,":"))
	{
		$outCurTime+=$tmp;
	}

	$return[0] = $plugin_folderName;
	$return[1] = $outCurTime;
	
	return $return;
}






proc vector HZrig_colorIndex2color(int $index)
{
	switch($index)
	{
		case 0:
			return <<0.627,0.627,0.627>>;
		break;
		case 1:
			return <<0,0,0>>;
		break;
		case 2:
			return <<0.247, 0.247, 0.247>>;
		break;
		break;
		case 3:
			return <<0.498, 0.498, 0.498>>;
		break;
		case 4:
			return <<0.608, 0, 0.157>>;
		break;
		case 5:
			return <<0, 0.016, 0.373>>;
		break;
		case 6:
			return <<0, 0, 1>>;
		break;
		case 7:
			return <<0, 0.275, 0.094>>;
		break;
		case 8:
			return <<0.145, 0, 0.263>>;
		break;
		case 9:
			return <<0.78, 0, 0.78>>;
		break;
		case 10:
			return <<0.537, 0.278, 0.2>>;
		break;
		case 11:
			return <<0.243, 0.133, 0.122>>;
		break;
		case 12:
			return <<0.6, 0.145, 0>>;
		break;
		case 13:
			return <<1, 0, 0>>;
		break;
		case 14:
			return <<0, 1, 0>>;
		break;
		case 15:
			return <<0, 0.255, 0.6>>;
		break;
		case 16:
			return <<1, 1, 1>>;
		break;
		case 17:
			return <<1, 1, 0>>;
		break;
		case 18:
			return <<0.388, 0.863, 1>>;
		break;
		case 19:
			return <<0.263, 1, 0.635>>;
		break;
		case 20:
			return <<1, 0.686, 0.686>>;
		break;
		case 21:
			return <<0.89, 0.675, 0.475>>;
		break;
		case 22:
			return <<1, 1, 0.384>>;
		break;
		case 23:
			return <<0, 0.6, 0.325>>;
		break;
		case 24:
			return <<0.627, 0.412, 0.188>>;
		break;
		case 25:
			return <<0.62, 0.627, 0.188>>;
		break;
		case 26:
			return <<0.408, 0.627, 0.188>>;
		break;
		case 27:
			return <<0.188, 0.627, 0.365>>;
		break;
		case 28:
			return <<0.188, 0.627, 0.627>>;
		break;
		case 29:
			return <<0.188, 0.404, 0.627>>;
		break;
		case 30:
			return <<0.435, 0.188, 0.627>>;
		break;
		case 31:
			return <<0.627, 0.188, 0.412>>;
		break;
	}
}



proc HZrig_curveOperate_UI()
{
//////////////////////////////////////////////////////////////////check/////////00000000000
string $childs[] = `formLayout -q -ca HZrig_curveOperateUI_mainFormLayout`;
if(size($childs))
{
	for($tmp in $childs)
	{
		deleteUI $tmp;
	}
}




	string $mainForm = `formLayout -numberOfDivisions 100 -p HZrig_curveOperateUI_mainFormLayout`;
		//////////////////////////////////////1111111111111111
		//////////////////////////////////////1111111111111111
		//////////////////////////////////////1111111111111111
		string $child_1 = `
		rowColumnLayout -nc 2 -cw 1 20 -cw 2 180
		`;
		
			button -h 80 -l ">" -m 0 
				-c "window -e -wh 940 633 HZrig_mainWin;button -e -m 0 HZrig_curveOperateUI_expan_button;"
			HZrig_curveOperateUI_expan_button;
			
			text -l "     default offset:::";
			
		setParent..;
		
		//////////////////////////////////////2222222222222222
		//////////////////////////////////////2222222222222222
		//////////////////////////////////////2222222222222222
		string $child_2 = `
		rowColumnLayout -nc 9 
							-cw 1 40 
							-cw 2 90 
							-cw 3 40 
							-cw 4 90 
							-cw 5 40 
							-cw 6 90
							-cw 7 44
							-cw 8 45
							-cw 9 25
		`;
		
			rowColumnLayout -nr 3 -rh 1 27 -rh 2 27 -rh 3 27;
				text -l "   TX";
				text -l "   TY";
				text -l "   TZ";
			setParent..;
			rowColumnLayout -nr 3 -rh 1 27 -rh 2 27 -rh 3 27;
				floatField HZrig_curveOperateUI_TXinfo_fF;
				floatField HZrig_curveOperateUI_TYinfo_fF;
				floatField HZrig_curveOperateUI_TZinfo_fF;
			setParent..;
			rowColumnLayout -nr 3 -rh 1 27 -rh 2 27 -rh 3 27;
				text -l "   RX";
				text -l "   RY";
				text -l "   RZ";
			setParent..;
			rowColumnLayout -nr 3 -rh 1 27 -rh 2 27 -rh 3 27;
				floatField HZrig_curveOperateUI_RXinfo_fF;
				floatField HZrig_curveOperateUI_RYinfo_fF;
				floatField HZrig_curveOperateUI_RZinfo_fF;
			setParent..;
			rowColumnLayout -nr 3 -rh 1 27 -rh 2 27 -rh 3 27;
				text -l "   SX";
				text -l "   SY";
				text -l "   SZ";
			setParent..;
			rowColumnLayout -nr 3 -rh 1 27 -rh 2 27 -rh 3 27;
				floatField -v 1.0 HZrig_curveOperateUI_SXinfo_fF;
				floatField -v 1.0 HZrig_curveOperateUI_SYinfo_fF;
				floatField -v 1.0 HZrig_curveOperateUI_SZinfo_fF;
			setParent..;
			symbolCheckBox -w 40 -h 20 -v 1
				-onc "columnLayout -e -m 1 HZrig_curveOperateUI_colorPanel_columnLayout;rowColumnLayout -e -m 1 HZrig_curveOperateUI_color_rowColumnLayout;"  
				-ofc "columnLayout -e -m 0 HZrig_curveOperateUI_colorPanel_columnLayout;rowColumnLayout -e -m 0 HZrig_curveOperateUI_color_rowColumnLayout;"
				-ann "turn off this checkBox will not change curveShape's displayColor(set to default)"
				HZrig_curveOperateUI_curveColor_symbolCheckBox;
				
			rowColumnLayout -nr 2 -rh 1 61 -rh 2 20 HZrig_curveOperateUI_color_rowColumnLayout;
				canvas -rgbValue 0 0 1 -width 40 -height 80 HZrig_curveOperateUI_color_sB;
				intField -w 41 -min -1 -max 31 -s 1 -v 6 
					-ec "HZrig_intField2canvasCommand();"
					HZrig_curveOperateUI_color_iF;
			setParent..;
			
			button -l "<<" -h 80 
				-c "window -e -wh 480 633 HZrig_mainWin;button -e -m 1 HZrig_curveOperateUI_expan_button;" 
			HZrig_curveOperateUI_shrink_button;
		
		setParent..;
		
		//////////////////////////////////////3333333333333333  add iTB 
		//////////////////////////////////////3333333333333333
		//////////////////////////////////////3333333333333333
		string $child_3 = `
		shelfLayout -style "iconOnly" -cw 64 -ch 64 -ann "this area have lots of shelf buttons which will add curve shape or replace curve shape depends on information above"
		`;
			
			string $mayaInfos[] = HZrig_mayaInfo();
			string $sep_infos[] = stringToStringArray($mayaInfos[0],"_");
			float $mVersion = $sep_infos[1];
		
			string $CSfiles[] = HZrig_getFolderNameUnderLocPath("HZrig_controller/curveShape_lib/","cs");
			for($tmp in $CSfiles)
			{	
				string $baseName = basenameEx($tmp);
				string $sBtemp = `iconTextButton -c ("HZrig_curveOperateUI_shelfButtonCC(0,\""+$baseName+"\")") -ann $baseName -mw 0 -mh 0`;
					/////add popup menu 20120317
					HZrig_curveCommand_pM($baseName);
				string $image = `internalVar -usd`+"HZrig_controller/curveShape_lib/"+$baseName+"_icon_M.bmp";
				if($mVersion >= 2011)
				{
					$image = `internalVar -usd`+"HZrig_controller/curveShape_lib/"+$baseName+"_icon_M_over2011.bmp";
				}
				if(`file -q -ex $image`)
				{
					iconTextButton -e -i $image $sBtemp;
				}
			}
		
		setParent..;
		
		//////////////////////////////////////4444444444444444
		//////////////////////////////////////4444444444444444
		//////////////////////////////////////4444444444444444
		string $child_4 = `
		columnLayout -adj 1 HZrig_curveOperateUI_colorPanel_columnLayout
		`;
		
			gridLayout -w 120 -h 60 -nrc 1 4 -cwh 60 60;
				iconTextButton -bgc 1 0 0 -c "canvas -e -rgbValue 1 0 0 HZrig_curveOperateUI_color_sB;intField -e -v 13 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(13)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0 1 0 -c "canvas -e -rgbValue 0 1 0 HZrig_curveOperateUI_color_sB;intField -e -v 14 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(14)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0 0 1 -c "canvas -e -rgbValue 0 0 1 HZrig_curveOperateUI_color_sB;intField -e -v 6 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(6)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 1 1 0 -c "canvas -e -rgbValue 1 1 0 HZrig_curveOperateUI_color_sB;intField -e -v 17 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(17)"
					-ann "double click will change display color those you have selected(curves)";
			setParent..;
			gridLayout -w 120 -h 120 -nrc 4 7 -cwh 34 30;
				iconTextButton -bgc 0.627 0.627 0.627 -c "canvas -e -rgbValue 0.627 0.627 0.627 HZrig_curveOperateUI_color_sB;intField -e -v 0 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(0)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0 0 0 -c "canvas -e -rgbValue 0 0 0 HZrig_curveOperateUI_color_sB;intField -e -v 1 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(1)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.247 0.247 0.247 -c "canvas -e -rgbValue 0.247 0.247 0.247 HZrig_curveOperateUI_color_sB;intField -e -v 2 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(2)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.498 0.498 0.498 -c "canvas -e -rgbValue 0.498 0.498 0.498 HZrig_curveOperateUI_color_sB;intField -e -v 3 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(3)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.608 0 0.157 -c "canvas -e -rgbValue 0.608 0 0.157 HZrig_curveOperateUI_color_sB;intField -e -v 4 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(4)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0 0.016 0.373 -c "canvas -e -rgbValue 0 0.016 0.373 HZrig_curveOperateUI_color_sB;intField -e -v 5 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(5)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0 0.275 0.094 -c "canvas -e -rgbValue 0 0.275 0.094 HZrig_curveOperateUI_color_sB;intField -e -v 7 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(7)"
					-ann "double click will change display color those you have selected(curves)";
				
				iconTextButton -bgc 0.145 0 0.263 -c "canvas -e -rgbValue 0.145 0 0.263 HZrig_curveOperateUI_color_sB;intField -e -v 8 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(8)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.78 0 0.78 -c "canvas -e -rgbValue 0.78 0 0.78 HZrig_curveOperateUI_color_sB;intField -e -v 9 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(9)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.537 0.278 0.2 -c "canvas -e -rgbValue 0.537 0.278 0.2 HZrig_curveOperateUI_color_sB;intField -e -v 10 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(10)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.243 0.133 0.122 -c "canvas -e -rgbValue 0.243 0.133 0.122 HZrig_curveOperateUI_color_sB;intField -e -v 11 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(11)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.6 0.145 0 -c "canvas -e -rgbValue 0.6 0.145 0 HZrig_curveOperateUI_color_sB;intField -e -v 12 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(12)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0 0.255 0.6 -c "canvas -e -rgbValue 0 0.255 0.6 HZrig_curveOperateUI_color_sB;intField -e -v 15 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(15)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 1 1 1 -c "canvas -e -rgbValue 1 1 1 HZrig_curveOperateUI_color_sB;intField -e -v 16 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(16)"
					-ann "double click will change display color those you have selected(curves)";
				
				iconTextButton -bgc 0.388 0.863 1 -c "canvas -e -rgbValue 0.388 0.863 1 HZrig_curveOperateUI_color_sB;intField -e -v 18 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(18)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.263 1 0.635 -c "canvas -e -rgbValue 0.263 1 0.635 HZrig_curveOperateUI_color_sB;intField -e -v 19 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(19)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 1 0.686 0.686 -c "canvas -e -rgbValue 1 0.686 0.686 HZrig_curveOperateUI_color_sB;intField -e -v 20 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(20)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.89 0.675 0.475 -c "canvas -e -rgbValue 0.89 0.675 0.475 HZrig_curveOperateUI_color_sB;intField -e -v 21 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(21)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 1 1 0.384 -c "canvas -e -rgbValue 1 1 0.384 HZrig_curveOperateUI_color_sB;intField -e -v 22 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(22)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0 0.6 0.325 -c "canvas -e -rgbValue 0 0.6 0.325 HZrig_curveOperateUI_color_sB;intField -e -v 23 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(23)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.627 0.412 0.188 -c "canvas -e -rgbValue 0.627 0.412 0.188 HZrig_curveOperateUI_color_sB;intField -e -v 24 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(24)"
					-ann "double click will change display color those you have selected(curves)";
				
				iconTextButton -bgc 0.62 0.627 0.188 -c "canvas -e -rgbValue 0.62 0.627 0.188 HZrig_curveOperateUI_color_sB;intField -e -v 25 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(25)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.408 0.627 0.188 -c "canvas -e -rgbValue 0.408 0.627 0.188 HZrig_curveOperateUI_color_sB;intField -e -v 26 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(26)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.188 0.627 0.365 -c "canvas -e -rgbValue 0.188 0.627 0.365 HZrig_curveOperateUI_color_sB;intField -e -v 27 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(27)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.188 0.627 0.627 -c "canvas -e -rgbValue 0.188 0.627 0.627 HZrig_curveOperateUI_color_sB;intField -e -v 28 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(28)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.188 0.404 0.627 -c "canvas -e -rgbValue 0.188 0.404 0.627 HZrig_curveOperateUI_color_sB;intField -e -v 29 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(29)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.435 0.188 0.627 -c "canvas -e -rgbValue 0.435 0.188 0.627 HZrig_curveOperateUI_color_sB;intField -e -v 30 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(30)"
					-ann "double click will change display color those you have selected(curves)";
				iconTextButton -bgc 0.627 0.188 0.412 -c "canvas -e -rgbValue 0.627 0.188 0.412 HZrig_curveOperateUI_color_sB;intField -e -v 31 HZrig_curveOperateUI_color_iF;"
					-dcc "HZrig_changeCurveColor(31)"
					-ann "double click will change display color those you have selected(curves)";


			
				
			setParent..;
			
		
		setParent..;
		
		//////////////////////////////////////5555555555555555
		//////////////////////////////////////5555555555555555
		//////////////////////////////////////5555555555555555
		string $child_5 = `
		columnLayout -adj 1 HZrig_curveOperateUI_modifyCurve_parent_columnLayout
		`;
			
			button -l "start_modify_curves" -h 65 -ann "for start modifying curves you need select some transform nodes whose have curve shape under them"
			-c "if(`rowColumnLayout -q -ex HZrig_curveOperateUI_modifyCurve_rowColumnLayout`)deleteUI HZrig_curveOperateUI_modifyCurve_rowColumnLayout;HZrig_curveOperateUI_addUI_CC();HZrig_curveOperateUI_exchangeButtonCommand();"
			HZrig_curveOperateUI_modifyCurve_button;
			//"delete -ch $HZrig_curveOperate_allCurves;deleteUI HZrig_moveCurveShape_Win;";
			

		setParent..;
		
		
		
		
	formLayout -edit
		-af $child_1 "top"    0
		-af $child_1 "left"   0
		-ac $child_1 "bottom" 0 $child_3
		-ac $child_1 "right"  0 $child_2

		-af $child_2 "top"    0
		-af $child_2 "left"   180   ///200
		-ac $child_2 "bottom" 0 $child_3
		-ac $child_2 "right"  0 $child_4

		-af $child_3 "top"    84
		-af $child_3 "left"   0
		-af $child_3 "bottom" 0
		-ac $child_3 "right"  0 $child_5

		-af $child_4 "top"    0
		-aof $child_4 "left"   -240
		-ac $child_4 "bottom" 0 $child_5
		-af $child_4 "right"  0

		-af $child_5 "top"    200
		-aof $child_5 "left"   -240
		-af $child_5 "bottom" 0
		-af $child_5 "right"  0
	$mainForm;


/////////////////////////////////////////////////////////////////set formlayout/////////end:end:end
formLayout -edit
	-af $mainForm "top"    0
	-af $mainForm "left"   0
	-af $mainForm "bottom" 0
	-af $mainForm "right"  0
	HZrig_curveOperateUI_mainFormLayout;

}

proc connectColor(string $tmp,int $index)
{
	string $sources[] = `listConnections ($tmp+".overrideEnabled")`;
	if(size($sources) == 0)
	{
		setAttr ($tmp+".overrideEnabled") 1;
		string $ccc[] = `listConnections ($tmp+".overrideColor")`;
		if(size($ccc) == 0)
		{
			setAttr ($tmp+".overrideColor") $index;
		}
	}
}



global proc HZrig_changeCurveColor(int $index)
{
	string $sels[] = `ls -sl`;
	
	for($tmp in $sels)
	{
		if(`nodeType $tmp` == "nurbsCurve")
		{
			connectColor($tmp,$index);
		}
		else
		{
			string $allCurveShapes[] = `listRelatives -ni -s -f -type "nurbsCurve" $tmp`;
			if(size($allCurveShapes))
			{
				for($tmp2 in $allCurveShapes)
				{
					connectColor($tmp2,$index);
				}
			}
		}
		
	}
}



global proc string HZrig_addCS(string $trans,string $index,int $color)
{
	string $base = `internalVar -usd`;

	string $curve = `createNode nurbsCurve -n ($trans+"Shape") -p $trans`;
		setAttr -k off ".v";

	string $tk = "source \""+$base+"HZrig_controller/curveShape_lib/"+$index+".cs\"";
	eval ($tk);
	
	if($color>=0)
	{
		setAttr ".ove" yes;
		setAttr ".ovc" $color;
	}
	return $curve;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////>>>>>>>>>>>>>>///////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
global proc HZrig_removeCS(string $trans)
{
	string $css[] = `listRelatives -s -f -type "nurbsCurve" $trans`;
	if(size($css))
	{
		delete $css;
	}
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////







//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////>>>>>>>>>>>>>>>>>/////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
global proc string HZrig_addCS_scale(string $trans,string $index,int $color,float $scale)
{
	string $tempTnode = `createNode transform`;
		setAttr ".s" -type "double3" $scale $scale $scale;
	string $curveShape = HZrig_addCS($tempTnode,$index,$color);
	makeIdentity -apply true -t 0 -r 0 -s 1 -n 0 $tempTnode;
	parent -r -s $curveShape $trans;
	$curveShape = `rename $curveShape ($trans+"Shape")`;
	delete $tempTnode;
	return $curveShape;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////>>>>>>>>>>>>>>>>>/////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
global proc string HZrig_addCS_scales(string $trans,string $index,int $color,vector $scale)
{
	string $tempTnode = `createNode transform`;
		setAttr ".s" -type "double3" ($scale.x) ($scale.y) ($scale.z);
	string $curveShape = HZrig_addCS($tempTnode,$index,$color);
	makeIdentity -apply true -t 0 -r 0 -s 1 -n 0 $tempTnode;
	parent -r -s $curveShape $trans;
	$curveShape = `rename $curveShape ($trans+"Shape")`;
	delete $tempTnode;
	return $curveShape;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////






//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////>>>>>>>>>>>>>>>>>/////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
global proc string HZrig_addCS_rotatesAndScales(string $trans,string $index,int $color,vector $scale,vector $rot)
{
	string $tempTnode = `createNode transform`;
		setAttr ".r" -type "double3" ($rot.x) ($rot.y) ($rot.z);
		setAttr ".s" -type "double3" ($scale.x) ($scale.y) ($scale.z);
	string $curveShape = HZrig_addCS($tempTnode,$index,$color);
	makeIdentity -apply true -t 0 -r 1 -s 1 -n 0 $tempTnode;
	parent -r -s $curveShape $trans;
	$curveShape = `rename $curveShape ($trans+"Shape")`;
	delete $tempTnode;
	return $curveShape;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////






//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////>>>>>>>>>>>>>>>>>/////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
global proc string HZrig_addCS_rotatesAndScalesAndTranslate(string $trans,string $index,int $color,vector $scale,vector $rot,vector $translate)
{
	string $tempTnode = `createNode transform`;
		setAttr ".t" -type "double3" ($translate.x) ($translate.y) ($translate.z);
		setAttr ".r" -type "double3" ($rot.x) ($rot.y) ($rot.z);
		setAttr ".s" -type "double3" ($scale.x) ($scale.y) ($scale.z);
	string $curveShape = HZrig_addCS($tempTnode,$index,$color);
	makeIdentity -apply true -t 0 -r 1 -s 1 -n 0 $tempTnode;
	parent -r -s $curveShape $trans;
	$curveShape = `rename $curveShape ($trans+"Shape")`;
	delete $tempTnode;
	return $curveShape;
}



global proc HZrig_curveModify()
{
	global string $HZrig_curveOperate_allCurves[];
	clear $HZrig_curveOperate_allCurves;
	string $sels[] = `ls -sl`;
	$HZrig_curveOperate_allCurves = `listRelatives -ni -s -f -type "nurbsCurve" $sels`;
	string $perC;
	string $allMoveS[];
	clear $allMoveS;

	for($perC in $HZrig_curveOperate_allCurves)
	{
		string $Ps[] = `listRelatives -p -f $perC`;
		string $moveS = `createNode transform -n ($Ps[0]+"_moveShape") -p $Ps[0]`;
		cluster -bs 1 -wn $moveS $moveS $perC;
		$allMoveS[size($allMoveS)] = $moveS;
	}

	HZrig_AttrLinkUPDW("t",$allMoveS);
	HZrig_AttrLinkUPDW("r",$allMoveS);
	HZrig_AttrLinkUPDW("s",$allMoveS);


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if (`window -exists HZrig_moveCurveShape_Win`) deleteUI HZrig_moveCurveShape_Win;
window -t "HZrig_moveCurveShape_UI" -wh 118 360 -menuBar true HZrig_moveCurveShape_Win;

	rowLayout;

		rowColumnLayout -nr 19
			-rh 1 25 
				-rh 2 5
			-rh 3 25
				-rh 4 5
			-rh 5 25

			-rh 6 10

			-rh 7 25
				-rh 8 5
			-rh 9 25
				-rh 10 5
			-rh 11 25

			-rh 12 10

			-rh 13 25
				-rh 14 5
			-rh 15 25
				-rh 16 5
			-rh 17 25

			-rh 18 10

			-rh 19 45
			;

			//01
			rowColumnLayout -nc 2 -cw 1 60 -cw 2 50;
				text -l "  offsetTX:";
				floatField -h 30 HZrig_moveCurveShapeTXattr_fF;
					connectControl HZrig_moveCurveShapeTXattr_fF ($allMoveS[0]+".tx");
			setParent..;

			//04
			separator -height 5 ;

			//02
			rowColumnLayout -nc 2 -cw 1 60 -cw 2 50;
				text -l "  offsetTY:";
				floatField -h 30 HZrig_moveCurveShapeTYattr_fF;
					connectControl HZrig_moveCurveShapeTYattr_fF ($allMoveS[0]+".ty");
			setParent..;

			//04
			separator -height 5;

			//03
			rowColumnLayout -nc 2 -cw 1 60 -cw 2 50 ;
				text -l "  offsetTZ:";
				floatField -h 30 HZrig_moveCurveShapeTZattr_fF;
					connectControl HZrig_moveCurveShapeTZattr_fF ($allMoveS[0]+".tz");
			setParent..;



			//04
			separator -height 10 -style "double";



			//05
			rowColumnLayout -nc 2 -cw 1 60 -cw 2 50 ;
				text -l "  rotateX:";
				floatField -h 30 HZrig_moveCurveShapeRXattr_fF;
					connectControl HZrig_moveCurveShapeRXattr_fF ($allMoveS[0]+".rx");
			setParent..;

			//04
			separator -height 5 ;

			//06
			rowColumnLayout -nc 2 -cw 1 60 -cw 2 50;
				text -l "  rotateY:";
				floatField -h 30 HZrig_moveCurveShapeRYattr_fF;
					connectControl HZrig_moveCurveShapeRYattr_fF ($allMoveS[0]+".ry");
			setParent..;

			//04
			separator -height 5 ;

			//07
			rowColumnLayout -nc 2 -cw 1 60 -cw 2 50;
				text -l "  rotateZ:";
				floatField -h 30 HZrig_moveCurveShapeRZattr_fF;
					connectControl HZrig_moveCurveShapeRZattr_fF ($allMoveS[0]+".rz");
			setParent..;



			//08
			separator -height 10 -style "double";



			//09
			rowColumnLayout -nc 2 -cw 1 60 -cw 2 50;
				text -l "  scaleX:";
				floatField -h 30 -v 1.0 HZrig_moveCurveShapeSXattr_fF;
					connectControl HZrig_moveCurveShapeSXattr_fF ($allMoveS[0]+".sx");
			setParent..;

			//04
			separator -height 5;

			//10
			rowColumnLayout -nc 3 -cw 1 40 -cw 2 20 -cw 3 50;
				text -l "  scaleY:";
iconTextButton -style "iconOnly" -h 25
	-c "float $getX = `floatField -q -v HZrig_moveCurveShapeSXattr_fF`;floatField -e -v $getX HZrig_moveCurveShapeSYattr_fF";
				floatField -h 30 -v 1.0 HZrig_moveCurveShapeSYattr_fF;
					connectControl HZrig_moveCurveShapeSYattr_fF ($allMoveS[0]+".sy");
			setParent..;

			//04
			separator -height 5;

			//11
			rowColumnLayout -nc 3-cw 1 40 -cw 2 20 -cw 3 50;
				text -l "  scaleZ:";
iconTextButton -style "iconOnly" -h 25
	-c "float $getX = `floatField -q -v HZrig_moveCurveShapeSXattr_fF`;floatField -e -v $getX HZrig_moveCurveShapeSZattr_fF";
				floatField -h 30 -v 1.0 HZrig_moveCurveShapeSZattr_fF;
					connectControl HZrig_moveCurveShapeSZattr_fF ($allMoveS[0]+".sz");
			setParent..;



			//12
			separator -height 10 -style "double";



			//13

			button -l "finish and close" -h 45
	-c "delete -ch $HZrig_curveOperate_allCurves;deleteUI HZrig_moveCurveShape_Win;";




		setParent..;

	setParent..;

window -e -wh 118 360 HZrig_moveCurveShape_Win;
showWindow HZrig_moveCurveShape_Win;


select -r $allMoveS[0];


}




////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
global proc HZrig_contactMe()
{
	if (`window -exists HZrig_contactMeWin`) deleteUI HZrig_contactMeWin;
	window -t "about 'HZrig'" HZrig_contactMeWin;

		columnLayout -adj 1;
			string $scrollField = `scrollField -wordWrap false -editable false -h 220`;
			string $contactMe = "";
			$contactMe += "Hello, I'm John HuangZhen.Thank you for using 'HZrig_controllers'\n";
			$contactMe += "this is part of auto-rig script 'HZrig',please visite my website\n";
			$contactMe += "www.ani-Q.com for details \n";
			$contactMe += "\n";
			$contactMe += "\n";
			$contactMe += "    email:    qeejihz@gmail.com\n";
			$contactMe += "    \n";
			$contactMe += "    website:  www.ani-Q.com\n";
			$contactMe += "    \n";
			$contactMe += "have fun and thank you.\n";
			$contactMe += "-John20120403\n";
			scrollField -e -tx $contactMe $scrollField;

	window -e -wh 530 220 HZrig_contactMeWin;
	showWindow HZrig_contactMeWin;
}
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////









/******************************************************************************************************************************************************************************************************************************************
HZrig_controller_mainWin
******************************************************************************************************************************************************************************************************************************************/
global proc HZrig_controllers_mainUI()
{
///+++++++++++++++++++++++


/////////////////////////////////////////////////////////////////////////////UI start/////////////////////////////////////////////////////////////////////////////
if (`window -exists HZrig_controller_mainWin`) deleteUI HZrig_controller_mainWin;
window -t "HZrig_controllers V1.0" -menuBar true HZrig_controller_mainWin;
///////////////////////////////////////////////////////////////////////
//columnLayout -adjustableColumn true;
string $mainForm = `formLayout`;
//////
	string $menuBarLayout = `menuBarLayout`;
		menu -label "File";
			menuItem -label "Exit" -c "deleteUI HZrig_controller_mainWin;";
		menu -label "Help" -helpMenu true;
			menuItem -label "About..."  -c "HZrig_contactMe()";
	setParent ..;
//////
	string $form = `formLayout`;

		string $tabs = `tabLayout -innerMarginWidth 0 -innerMarginHeight 0 -childResizable true -scr 0 -sc "" HZrig_mainWin_mainTabLayout`;

		formLayout -edit
		-attachForm $tabs "top"    0
		-attachForm $tabs "left"   0
		-attachForm $tabs "bottom" 0
		-attachForm $tabs "right"  0
		$form;

			
			////////////////////////////////////////////////////table 2 >>curve operation
			string $child3 = `formLayout HZrig_curveOperateUI_mainFormLayout`;
			setParent ..;

			HZrig_curveOperate_UI();

		setParent ..;
	setParent ..;

///////////////////////////////////////////////////////////////////////
		tabLayout -edit
			-tabLabel $child3 "curveOperate"
			$tabs;
///////////////////////////////////////////////////////////////////////

formLayout -edit
-attachForm $menuBarLayout "top"    0
-attachForm $menuBarLayout "left"   0
-an $menuBarLayout "bottom" 
-attachForm $menuBarLayout "right"  0

-ac $form "top"  0 $menuBarLayout
-attachForm $form "left"   0
-attachForm $form "bottom" 0
-attachForm $form "right"  0
$mainForm;

///////////////////////////////////////////////////////////////////////
window -e -wh 940 633 HZrig_controller_mainWin;
showWindow HZrig_controller_mainWin;
///////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////UI end/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////UI end/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////UI end/////////////////////////////////////////////////////////////////////////////
}


global proc HZrig_curveOperateUI_addUI_CC()
{
	global string $HZrig_curveOperate_allCurves[];
	clear $HZrig_curveOperate_allCurves;
	string $sels[] = `ls -sl`;
	$HZrig_curveOperate_allCurves = `listRelatives -ni -s -f -type "nurbsCurve" $sels`;
	
	for($tmp in $sels)
	{
		if(nodeType($tmp) == "nurbsCurve")
		{
			$HZrig_curveOperate_allCurves[size($HZrig_curveOperate_allCurves)] = $tmp;
		}
	}
	
	if(size($HZrig_curveOperate_allCurves)>0)
	{
		string $perC;
		string $HZrig_allMoveS[];
		clear $HZrig_allMoveS;

		for($perC in $HZrig_curveOperate_allCurves)
		{
			string $Ps[] = `listRelatives -p -f $perC`;
			string $Ps_deal = substituteAllString($Ps[0], "|", "_");
			string $moveS = `createNode transform -n ($Ps_deal+"_moveShape") -p $Ps[0]`;
			cluster -bs 1 -wn $moveS $moveS $perC;
			$HZrig_allMoveS[size($HZrig_allMoveS)] = $moveS;
		}

		HZrig_AttrLinkUPDW("t",$HZrig_allMoveS);
		HZrig_AttrLinkUPDW("r",$HZrig_allMoveS);
		HZrig_AttrLinkUPDW("s",$HZrig_allMoveS);




		if(`columnLayout -q -ex HZrig_curveOperateUI_modifyCurve_parent_columnLayout`)
		{
			rowColumnLayout -w 238 -p HZrig_curveOperateUI_modifyCurve_parent_columnLayout
			-nr 19 
				-rh 1 1 
					-rh 2 10
					
				-rh 3 25
					-rh 4 5
				-rh 5 25
					-rh 6 5
				-rh 7 25
					-rh 8 10
					
				-rh 9 25
					-rh 10 5
				-rh 11 25
					-rh 12 5
				-rh 13 25
					-rh 14 10
					
				-rh 15 25
					-rh 16 5
				-rh 17 25
					-rh 18 5
				-rh 19 25
				HZrig_curveOperateUI_modifyCurve_rowColumnLayout
				;





				//-1

				text -l " ";
				
				//00
				separator -height 10 -style "double";
				
				
				
				
				//01
				rowColumnLayout -nc 5 -cw 1 60 -cw 2 78 -cw 3 30 -cw 4 40 -cw 5 30;
					text -l "  offsetTX:";
					floatField -h 30 HZrig_moveCurveShapeTXattr_fF;
						connectControl HZrig_moveCurveShapeTXattr_fF ($HZrig_allMoveS[0]+".tx");
					button -l "-" 
						-c "float $AAAAA = `getAttr \".tx\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeTXattr_add_fF`;setAttr \".tx\" ($AAAAA-$BBBBB)";
					floatField -v 1.0 HZrig_moveCurveShapeTXattr_add_fF;
					button -l "+"
						-c "float $AAAAA = `getAttr \".tx\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeTXattr_add_fF`;setAttr \".tx\" ($AAAAA+$BBBBB)";
				setParent..;

				//04
				separator -height 5 ;

				//02
				rowColumnLayout -nc 5 -cw 1 60 -cw 2 78 -cw 3 30 -cw 4 40 -cw 5 30;
					text -l "  offsetTY:";
					floatField -h 30 HZrig_moveCurveShapeTYattr_fF;
						connectControl HZrig_moveCurveShapeTYattr_fF ($HZrig_allMoveS[0]+".ty");
					button -l "-"
						-c "float $AAAAA = `getAttr \".ty\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeTYattr_add_fF`;setAttr \".ty\" ($AAAAA-$BBBBB)";
					floatField  -v 1.0 HZrig_moveCurveShapeTYattr_add_fF;
					button -l "+"
						-c "float $AAAAA = `getAttr \".ty\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeTYattr_add_fF`;setAttr \".ty\" ($AAAAA+$BBBBB)";
				setParent..;

				//04
				separator -height 5;

				//03
				rowColumnLayout -nc 5 -cw 1 60 -cw 2 78 -cw 3 30 -cw 4 40 -cw 5 30;
					text -l "  offsetTZ:";
					floatField -h 30 HZrig_moveCurveShapeTZattr_fF;
						connectControl HZrig_moveCurveShapeTZattr_fF ($HZrig_allMoveS[0]+".tz");
					button -l "-"
						-c "float $AAAAA = `getAttr \".tz\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeTZattr_add_fF`;setAttr \".tz\" ($AAAAA-$BBBBB)";
					floatField  -v 1.0 HZrig_moveCurveShapeTZattr_add_fF;
					button -l "+"
						-c "float $AAAAA = `getAttr \".tz\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeTZattr_add_fF`;setAttr \".tz\" ($AAAAA+$BBBBB)";
				setParent..;



				//04
				separator -height 10 -style "double";



				//05
				rowColumnLayout -nc 5 -cw 1 60 -cw 2 78 -cw 3 30 -cw 4 40 -cw 5 30;
					text -l "  rotateX:";
					floatField -h 30 HZrig_moveCurveShapeRXattr_fF;
						connectControl HZrig_moveCurveShapeRXattr_fF ($HZrig_allMoveS[0]+".rx");
					button -l "-"
						-c "float $AAAAA = `getAttr \".rx\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeRXattr_add_fF`;setAttr \".rx\" ($AAAAA-$BBBBB)";
					floatField  -v 90 HZrig_moveCurveShapeRXattr_add_fF;
					button -l "+"
						-c "float $AAAAA = `getAttr \".rx\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeRXattr_add_fF`;setAttr \".rx\" ($AAAAA+$BBBBB)";
				setParent..;

				//04
				separator -height 5 ;

				//06
				rowColumnLayout -nc 5 -cw 1 60 -cw 2 78 -cw 3 30 -cw 4 40 -cw 5 30;
					text -l "  rotateY:";
					floatField -h 30 HZrig_moveCurveShapeRYattr_fF;
						connectControl HZrig_moveCurveShapeRYattr_fF ($HZrig_allMoveS[0]+".ry");
					button -l "-"
						-c "float $AAAAA = `getAttr \".ry\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeRYattr_add_fF`;setAttr \".ry\" ($AAAAA-$BBBBB)";
					floatField -v 90 HZrig_moveCurveShapeRYattr_add_fF;
					button -l "+"
						-c "float $AAAAA = `getAttr \".ry\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeRYattr_add_fF`;setAttr \".ry\" ($AAAAA+$BBBBB)";
				setParent..;

				//04
				separator -height 5 ;

				//07
				rowColumnLayout -nc 5 -cw 1 60 -cw 2 78 -cw 3 30 -cw 4 40 -cw 5 30;
					text -l "  rotateZ:";
					floatField -h 30 HZrig_moveCurveShapeRZattr_fF;
						connectControl HZrig_moveCurveShapeRZattr_fF ($HZrig_allMoveS[0]+".rz");
					button -l "-"
						-c "float $AAAAA = `getAttr \".rz\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeRZattr_add_fF`;setAttr \".rz\" ($AAAAA-$BBBBB)";
					floatField -v 90 HZrig_moveCurveShapeRZattr_add_fF;
					button -l "+"
						-c "float $AAAAA = `getAttr \".rz\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeRZattr_add_fF`;setAttr \".rz\" ($AAAAA+$BBBBB)";
				setParent..;



				//08
				separator -height 10 -style "double";



				//09
				rowColumnLayout -nc 5 -cw 1 60 -cw 2 78 -cw 3 30 -cw 4 40 -cw 5 30;
					text -l "  scaleX:";
					floatField -h 30 -v 1.0 HZrig_moveCurveShapeSXattr_fF;
						connectControl HZrig_moveCurveShapeSXattr_fF ($HZrig_allMoveS[0]+".sx");
					button -l "-"
						-c "float $AAAAA = `getAttr \".sx\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeSXattr_add_fF`;setAttr \".sx\" ($AAAAA-$BBBBB)";
					floatField -v .1 HZrig_moveCurveShapeSXattr_add_fF;
					button -l "+"
						-c "float $AAAAA = `getAttr \".sx\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeSXattr_add_fF`;setAttr \".sx\" ($AAAAA+$BBBBB)";
				setParent..;

				//04
				separator -height 5;

				//10
				rowColumnLayout -nc 6 -cw 1 40 -cw 2 20 -cw 3 78 -cw 4 30 -cw 5 40 -cw 6 30;
					text -l "  scaleY:";
				iconTextButton -style "iconOnly" -h 25
				-c "float $getX = `floatField -q -v HZrig_moveCurveShapeSXattr_fF`;floatField -e -v $getX HZrig_moveCurveShapeSYattr_fF";
					floatField -h 30 -v 1.0 HZrig_moveCurveShapeSYattr_fF;
						connectControl HZrig_moveCurveShapeSYattr_fF ($HZrig_allMoveS[0]+".sy");
					button -l "-"
						-c "float $AAAAA = `getAttr \".sy\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeSYattr_add_fF`;setAttr \".sy\" ($AAAAA-$BBBBB)";
					floatField -v .1 HZrig_moveCurveShapeSYattr_add_fF;
					button -l "+"
						-c "float $AAAAA = `getAttr \".sy\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeSYattr_add_fF`;setAttr \".sy\" ($AAAAA+$BBBBB)";
				setParent..;

				//04
				separator -height 5;

				//11
				rowColumnLayout -nc 6 -cw 1 40 -cw 2 20 -cw 3 78 -cw 4 30 -cw 5 40 -cw 6 30;
					text -l "  scaleZ:";
					iconTextButton -style "iconOnly" -h 25
					-c "float $getX = `floatField -q -v HZrig_moveCurveShapeSXattr_fF`;floatField -e -v $getX HZrig_moveCurveShapeSZattr_fF";
					floatField -h 30 -v 1.0 HZrig_moveCurveShapeSZattr_fF;
						connectControl HZrig_moveCurveShapeSZattr_fF ($HZrig_allMoveS[0]+".sz");
					button -l "-"
						-c "float $AAAAA = `getAttr \".sz\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeSZattr_add_fF`;setAttr \".sz\" ($AAAAA-$BBBBB)";
					floatField -v .1 HZrig_moveCurveShapeSZattr_add_fF;
					button -l "+"
						-c "float $AAAAA = `getAttr \".sz\"`;float $BBBBB = `floatField -q -v HZrig_moveCurveShapeSZattr_add_fF`;setAttr \".sz\" ($AAAAA+$BBBBB)";
				setParent..;
				
				
		select -r $HZrig_allMoveS[0];
		}
	}
	else
	{
		print "no nurbsCurve node be selected";
	}
}



global proc HZrig_curveOperateUI_shelfButtonCC(int $mod,string $type)
{
	string $sels[] = `ls -sl`;

	
	float $VTx = `floatField -q -v HZrig_curveOperateUI_TXinfo_fF`;
	float $VTy = `floatField -q -v HZrig_curveOperateUI_TYinfo_fF`;
	float $VTz = `floatField -q -v HZrig_curveOperateUI_TZinfo_fF`;
	vector $TTT = <<$VTx,$VTy,$VTz>>;
	
	float $VRx = `floatField -q -v HZrig_curveOperateUI_RXinfo_fF`;
	float $VRy = `floatField -q -v HZrig_curveOperateUI_RYinfo_fF`;
	float $VRz = `floatField -q -v HZrig_curveOperateUI_RZinfo_fF`;
	vector $RRR = <<$VRx,$VRy,$VRz>>;
	
	float $VSx = `floatField -q -v HZrig_curveOperateUI_SXinfo_fF`;
	float $VSy = `floatField -q -v HZrig_curveOperateUI_SYinfo_fF`;
	float $VSz = `floatField -q -v HZrig_curveOperateUI_SZinfo_fF`;
	vector $SSS = <<$VSx,$VSy,$VSz>>;

	int $colorIf = `symbolCheckBox -q -v HZrig_curveOperateUI_curveColor_symbolCheckBox`;

	int $colorIndex;
	if($colorIf)
	{
		$colorIndex = `intField -q -v HZrig_curveOperateUI_color_iF`;
	}
	else
	{
		$colorIndex = -1;
	}

	/////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////
	if(size($sels))
	{
		for($tmp in $sels)
		{
			if(nodeType($tmp) == "transform" || nodeType($tmp) == "joint")
			{
				string $sources[];
				clear $sources;
				string $css[] = `listRelatives -s -f -type "nurbsCurve" $tmp`;
				string $curveShape;
				$curveShape = HZrig_addCS_rotatesAndScalesAndTranslate($tmp,$type,$colorIndex,$SSS,$RRR,$TTT);


				if(size($css) == 1)
				{
					$sources = `listConnections -p 1 ($css[0]+".drawOverride")`;
					if(objExists($sources[0]))
					{
						connectAttr -f $sources[0] ($curveShape+".drawOverride");
					}
				}
				else if(size($css) > 1)
				{
					for($tmp in $css)
					{
						string $tmpSources[] = `listConnections -p 1 ($tmp+".drawOverride")`;
						$sources[size($sources)] = $tmpSources[0];
					}
					int $if = 0;
					for($i = 0;$i<(size($sources)-1);$i++)
					{
						if($sources[$i] != $sources[($i+1)])
						{
							$if++;
						}
					}
					if($if == 0)
					{
						if(objExists($sources[0]))
						{
							connectAttr -f $sources[0] ($curveShape+".drawOverride");
						}
					}
				
				}
				
				if($mod == 1)
				{
					delete $css;
					string $allSps[] = stringToStringArray($tmp,"|");
					rename $curveShape ($allSps[(size($allSps)-1)]+"Shape");
				}		
			}
			//else if(nodeType($tmp) == "nurbsCurve")
			//{
			//	string $parent[] = listRelatives -p 
			//}
		}
		select -r $sels;
	}
	else
	{
		string $myTransformNode = `createNode transform -n "HZrig_Ctr"`;
		string $curveShape = HZrig_addCS_rotatesAndScalesAndTranslate($myTransformNode,$type,$colorIndex,$SSS,$RRR,$TTT);
		select -r $myTransformNode;
	}
}




global proc HZrig_curveCommand_pM(string $baseName)
{
	popupMenu -mm 1;
		menuItem
			-label "replace" 
			-divider 0
			-subMenu 0
			-command ("HZrig_curveOperateUI_shelfButtonCC(1,\""+$baseName+"\")")
			-altModifier 0
			-optionModifier 0
			-commandModifier 0
			-ctrlModifier 0
			-shiftModifier 0
			-optionBox 0
			-enable 1
			-data 0
			-radialPosition "N" 
			-enableCommandRepeat 1
			-echoCommand 0
			-italicized 0
			-boldFont 0
			menuEditorMenuItem_N;
}



global proc HZrig_curveOperateUI_exchangeButtonCommand()
{
	string $get = `button -q -l HZrig_curveOperateUI_modifyCurve_button`;
	if($get == "start_modify_curves")
	{
		button -e -l "finish it" 
		-c "delete -ch $HZrig_curveOperate_allCurves;if(`rowColumnLayout -q -ex HZrig_curveOperateUI_modifyCurve_rowColumnLayout`)deleteUI HZrig_curveOperateUI_modifyCurve_rowColumnLayout;HZrig_curveOperateUI_exchangeButtonCommand();"
		HZrig_curveOperateUI_modifyCurve_button;
	}
	else if($get == "finish it")
	{
		button -e -l "start_modify_curves" 
		-c "if(`rowColumnLayout -q -ex HZrig_curveOperateUI_modifyCurve_rowColumnLayout`)deleteUI HZrig_curveOperateUI_modifyCurve_rowColumnLayout;HZrig_curveOperateUI_addUI_CC();HZrig_curveOperateUI_exchangeButtonCommand();"
		HZrig_curveOperateUI_modifyCurve_button;
	}
}





global proc HZrig_intField2canvasCommand()
{
	int $int = `intField -q -v HZrig_curveOperateUI_color_iF`;
	if($int>-1 && $int<32)
	{
		vector $color = HZrig_colorIndex2color($int);
		canvas -e -rgbValue ($color.x) ($color.y) ($color.z) HZrig_curveOperateUI_color_sB;
	}
	else
	{
		canvas -e -rgbValue 0.83 0.76 0.79 HZrig_curveOperateUI_color_sB;
	}
}

HZrig_controllers_mainUI();